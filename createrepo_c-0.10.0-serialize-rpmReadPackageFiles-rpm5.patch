From 5c11784a3f6da695dde99eb27522d2c726655b39 Mon Sep 17 00:00:00 2001
From: Jeff Johnson <n3npq@mac.com>
Date: Fri, 31 Mar 2017 02:46:56 -0400
Subject: [PATCH] - fix: serialize rpmReadPackageFiles() with a mutex. - fix:
 permit "rpm -vv" display of objects.

---
 src/parsehdr.c |  8 +++++++-
 src/parsepkg.c | 41 +++++++++++++++++++++++++++++++++--------
 src/xml_dump.c |  3 +++
 3 files changed, 43 insertions(+), 9 deletions(-)

diff --git a/src/parsehdr.c b/src/parsehdr.c
index c2949b5..4c8cd6d 100644
--- a/src/parsehdr.c
+++ b/src/parsehdr.c
@@ -469,7 +469,7 @@ cr_package_from_header(Header hdr,
                                                      NULL,
                                                      free);
 
-#ifdef	RPM5
+#ifdef RPM5
 
     HE_t Nhe = (HE_t) memset(alloca(sizeof(*Nhe)), 0, sizeof(*Nhe));
     HE_t Fhe = (HE_t) memset(alloca(sizeof(*Fhe)), 0, sizeof(*Fhe));
@@ -633,6 +633,12 @@ cr_package_from_header(Header hdr,
 #endif
                 } // Switch end
 	    }	// For items end
+
+            // XXX: libc.so filtering ////////////////////////////////
+            if (deptype == DEP_REQUIRES && libc_require_highest)
+                pkg->requires = g_slist_prepend(pkg->requires, libc_require_highest);
+            // XXX: libc.so filtering - END ////////////////////////////////
+
         }
 
 	rpmheFree(Nhe);
diff --git a/src/parsepkg.c b/src/parsepkg.c
index 3f333b5..112af7a 100644
--- a/src/parsepkg.c
+++ b/src/parsepkg.c
@@ -31,6 +31,7 @@
 #ifdef	RPM5
 #include <rpmio.h>
 #include <rpmmacro.h>
+#include <rpmcb.h>
 #include <pkgio.h>
 #include <rpmfi.h>
 #include <rpmts.h>
@@ -70,13 +71,18 @@ static gpointer
 cr_package_parser_init_once_cb(gpointer user_data G_GNUC_UNUSED)
 {
     rpmReadConfigFiles(NULL, NULL);
+#ifdef	RPM5_XXX
+rpmIncreaseVerbosity();
+rpmIncreaseVerbosity();
+#endif
     cr_ts = rpmtsCreate();
+
     if (!cr_ts)
         g_critical("%s: rpmtsCreate() failed", __func__);
 
     rpmVSFlags vsflags = 0;
-    vsflags |= _RPMVSF_NODIGESTS;
     vsflags |= _RPMVSF_NOSIGNATURES;
+    vsflags |= _RPMVSF_NODIGESTS;
     vsflags |= RPMVSF_NOHDRCHK;
     rpmtsSetVSFlags(cr_ts, vsflags);
     return NULL;
@@ -97,8 +103,13 @@ cr_package_parser_cleanup_once_cb(gpointer user_data G_GNUC_UNUSED)
         cr_ts = NULL;
     }
 
+#ifdef	RPM5
+    rpmMacrofiles = NULL;
+    (void) rpmcliFini(NULL);
+#else
     rpmFreeMacros(NULL);
     rpmFreeRpmrc();
+#endif
     return NULL;
 }
 
@@ -124,7 +135,12 @@ read_header(const char *filename, Header *hdr, GError **err)
         return FALSE;
     }
 
+#ifdef	RPM5
+    int rc = rpmReadPackageFile(cr_ts, fd, filename, hdr);
+#else
     int rc = rpmReadPackageFile(cr_ts, fd, NULL, hdr);
+#endif
+    Fclose(fd);
     if (rc != RPMRC_OK) {
         switch (rc) {
             case RPMRC_NOKEY:
@@ -140,12 +156,10 @@ read_header(const char *filename, Header *hdr, GError **err)
                           __func__);
                 g_set_error(err, ERR_DOMAIN, CRE_IO,
                             "rpmReadPackageFile() error");
-                Fclose(fd);
                 return FALSE;
         }
     }
 
-    Fclose(fd);
     return TRUE;
 }
 
@@ -155,16 +169,27 @@ cr_package_from_rpm_base(const char *filename,
                          cr_HeaderReadingFlags flags,
                          GError **err)
 {
-    Header hdr;
-    cr_Package *pkg;
+    Header hdr = NULL;
+    cr_Package *pkg = NULL;
 
     assert(filename);
     assert(!err || *err == NULL);
 
-    if (!read_header(filename, &hdr, err))
-        return NULL;
+#ifdef	RPM5
+    G_LOCK_DEFINE_STATIC(mutex_rpm);
+    G_LOCK(mutex_rpm);
+#endif
+
+    gboolean bingo = read_header(filename, &hdr, err);
+
+    if (bingo)
+	pkg = cr_package_from_header(hdr, changelog_limit, flags, err);
+
+#ifdef	RPM5
+    G_UNLOCK(mutex_rpm);
+    g_thread_yield();
+#endif
 
-    pkg = cr_package_from_header(hdr, changelog_limit, flags, err);
     headerFree(hdr);
     return pkg;
 }
diff --git a/src/xml_dump.c b/src/xml_dump.c
index 3fbb422..8881e02 100644
--- a/src/xml_dump.c
+++ b/src/xml_dump.c
@@ -39,6 +39,9 @@ cr_xml_dump_init()
 void
 cr_xml_dump_cleanup()
 {
+#ifdef	RPM5
+    xmlCleanupGlobals();
+#endif
     xmlCleanupParser();
 }
 
-- 
2.9.3

